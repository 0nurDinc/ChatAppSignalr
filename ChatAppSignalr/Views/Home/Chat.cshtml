@{
    ViewData["Title"] = "Chat";
}


    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-TX5mX6vKVIvMhuLLW4EN5Gfiyp0iMRfFOnH4Ah9w9AgZ/Z9RSQq6ZgZ9qFk01eBY" crossorigin="anonymous">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            margin-top: 50px;
        }

        .chat-container {
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 5px;
        }

        .message-list {
            list-style-type: none;
            padding: 0;
        }

            .message-list li {
                margin-bottom: 10px;
            }

        .alert {
            margin-top: 20px;
        }
    </style>


    <div class="container">
        <h1 class="text-center">Chat</h1>
        <div class="row">
            <div class="col-md-4">
                <div class="chat-container">
                    <div class="form-group">
                        <label for="groupNameInput">Enter group name:</label>
                        <input type="text" class="form-control" id="groupNameInput" placeholder="Group Name">
                    </div>
                    <button class="btn btn-primary mt-3 mb-3" onclick="createGroup()">Create Group</button>
                    <button class="btn btn-danger mt-3 mb-3" onclick="deleteGroup()">Delete Group</button>
                    <div class="form-group">
                        <label for="groupSelect">Select Group:</label>
                        <select class="form-control" id="groupSelect" onchange="selectGroup()">
                            <option value="">Select Group</option>
                        </select>
                    </div>
                    <input type="text" class="form-control mt-2 mb-2" id="userInput" placeholder="Enter your name">
                    <div class="alert alert-success" id="groupCreatedAlert" style="display: none;"></div>
                    <div class="alert alert-warning" id="groupExistsAlert" style="display: none;"></div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="chat-container">
                    <input type="text" class="form-control mb-2" id="messageInput" placeholder="Type a message">
                    <button class="btn btn-success" onclick="sendMessage()">Send</button>
                    <ul class="message-list" id="messagesList"></ul>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        connection.start().catch(err => console.error(err));

       

        connection.on("ReceiveMessage", (message) => {
            const messagesList = document.getElementById("messagesList");
            const li = document.createElement("li");
            li.textContent = `${message.user}: ${message.text}`;
            messagesList.appendChild(li);
        });

        connection.on("GroupCreated", groupName => {
            const groupSelect = document.getElementById("groupSelect");
            const option = document.createElement("option");
            option.value = groupName;
            option.text = groupName;
            groupSelect.add(option);
            document.getElementById("groupCreatedAlert").style.display = "block";
            document.getElementById("groupCreatedAlert").innerText = `Group "${groupName}" created successfully.`;
            setTimeout(() => {
                document.getElementById("groupCreatedAlert").style.display = "none";
            }, 3000);
        });

        connection.on("GroupExists", groupName => {
            document.getElementById("groupExistsAlert").style.display = "block";
            document.getElementById("groupExistsAlert").innerText = `Group "${groupName}" already exists. Please choose another name.`;
            setTimeout(() => {
                document.getElementById("groupExistsAlert").style.display = "none";
            }, 3000);
        });

        connection.on("GroupDeleted", groupName => {
            const groupSelect = document.getElementById("groupSelect");
            Array.from(groupSelect.options).forEach((option) => {
                if (option.value === groupName) {
                    option.remove();
                }
            });
            alert(`Group "${groupName}" deleted successfully.`);
        });

        connection.on("LoadGroupMessages", (messages) => {
            const messagesList = document.getElementById("messagesList");
            messagesList.innerHTML = "";
            messages.forEach((message) => {
                const li = document.createElement("li");
                li.textContent = `${message.user}: ${message.text}`;
                messagesList.appendChild(li);
            });
        });

      
        function createGroup() {
            const groupNameInput = document.getElementById("groupNameInput");
            const groupName = groupNameInput.value;
            connection.invoke("CreateGroup", groupName).catch(err => console.error(err));
        }

        function deleteGroup() {
            const groupSelect = document.getElementById("groupSelect");
            const groupName = groupSelect.value;
            connection.invoke("DeleteGroup", groupName).catch(err => console.error(err));
        }

        function sendMessage() {
            const groupSelect = document.getElementById("groupSelect");
            const groupName = groupSelect.value;
            const userInput = document.getElementById("userInput");
            const messageInput = document.getElementById("messageInput");
            const user = userInput.value;
            const message = messageInput.value;
            connection.invoke("SendMessageToGroup", groupName, user, message).catch(err => console.error(err));
            messageInput.value = "";
        }

        function selectGroup() {
            const groupSelect = document.getElementById("groupSelect");
            const selectedGroup = groupSelect.value;
            connection.invoke("GetGroupMessages", selectedGroup).catch(err => console.error(err));
        }


    </script>

